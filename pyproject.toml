# ===== [00] BUILD SYSTEM =====================================================
[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

# ===== [01] PROJECT METADATA ================================================
[project]
name = "my-ai-teacher"
version = "0.1.0"
requires-python = ">=3.10,<4.0"
description = "Clean scaffold for AI Teacher (Streamlit + RAG)"
readme = "README.md"
authors = [{ name = "you" }]

# ===== [02] RUNTIME DEPS =====================================================
dependencies = [
  "streamlit>=1.32",
  "pydantic>=2,<3",
  "pydantic-settings>=2,<3",
  "llama-index-core>=0.10",
  "google-api-python-client>=2.136.0",
  "google-auth>=2.30.0",
  "pypdf>=6,<7",        # 취약점 수정 버전 적용 (기존 <5 범위 제거)
]

# ===== [03] DEV DEPS (optional) =============================================
[project.optional-dependencies]
dev = [
  "mypy>=1.7",
  "ruff>=0.5",
  "bandit>=1.7",
  "pytest>=8",
  "types-requests",
  "types-PyYAML",
]

# ===== [04] TOOL CONFIG POINTERS ============================================  # [04] START
[tool.ruff]
extend = "ruff.toml"
src = ["src"]  # isort/ruff가 프로젝트 first-party 탐지 시 사용할 소스 루트

[tool.ruff.lint.isort]
known-first-party = ["src"]  # 'src'를 first-party로 분류하여 import 그룹 충돌 해소

[tool.mypy]
config_file = "mypy.ini"
# [04] END

# ===== [05] SETUPTOOLS (package discovery) ==================================
[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]

# ===== [06] POETRY SETUP (disable package install of the app) ===============
[tool.poetry]
package-mode = false

# [07] START: pyproject.toml (tool.gen_tree)
[tool.gen_tree]
# gen_tree 구성은 pyproject.toml에서 중앙화합니다.
# scripts/gen_tree.py 가 이 섹션을 자동으로 읽습니다.

max_depth = 4
exclude = [
  ".git", ".venv", "node_modules", "__pycache__", ".mypy_cache",
  ".ruff_cache", ".pytest_cache", "dist", "build", ".DS_Store",
  "*.zip", "*.bin"
]
# 보고서는 콤마 또는 리스트 입력 둘 다 인식됩니다.
reports = "stale,sizes,orphans"
stale_days = 120
topn_sizes = 20
# [05] END: pyproject.toml (tool.gen_tree)
