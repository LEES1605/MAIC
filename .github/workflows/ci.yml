# ===== [00] WORKFLOW META ====================================================  # [00] START
name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
# [00] END

# ===== [01] JOB MATRIX & GLOBALS ============================================  # [01] START
jobs:
  lint-test:
    name: Lint & Typecheck & Tests (py${{ matrix.python-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]

    defaults:
      run:
        shell: bash
# [01] END

# ===== [02] CHECKOUT & PYTHON SETUP ========================================= # [02] START
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
            python-version: ${{ matrix.python-version }}
# [02] END

# ===== [03] CACHE & INSTALL DEPENDENCIES ==================================== # [03] START
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Upgrade pip & wheel
        run: |
          python -m pip install -U pip wheel

      - name: Install project requirements (if present)
        if: hashFiles('requirements.txt') != ''
        run: |
          pip install -r requirements.txt

      - name: Install dev tools (ruff/mypy/pytest)
        run: |
          pip install -U ruff mypy pytest pytest-cov
# [03] END

# ===== [04] RUFF — LINT & FORMAT (AUTO-FIX) ================================= # [04] START
      - name: Ruff — Lint (auto-fix)
        run: |
          ruff --version
          # 자동 수정으로 CI 중단 방지 (기능 무영향)
          ruff check . --fix

      - name: Ruff — Format (auto-format)
        run: |
          # 포맷 차이로 실패하는 걸 방지 (—check 대신 실제 포맷)
          ruff format .
# [04] END

# ===== [05] TYPE CHECK (CONDITIONAL) ======================================== # [05] START
      - name: mypy (if config exists)
        if: |
          hashFiles('mypy.ini') != '' || hashFiles('pyproject.toml') != ''
        run: |
          mypy --version
          # 설정에 따라 프로젝트 패키지 경로를 조정하세요 (예: src/)
          mypy .
# [05] END

# ===== [06] TESTS (CONDITIONAL) ============================================= # [06] START
      - name: pytest (if tests exist)
        if: hashFiles('tests/**/*.py') != ''
        run: |
          pytest -q --maxfail=1 --disable-warnings
# [06] END
