# ============================ [01] MAIN CI (ruff/mypy/pytest) — START ============================
name: CI

on:
  push:
    branches: ["**"]
  pull_request:

permissions:
  contents: read

jobs:
  checks:
    name: Lint • Typecheck • Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Upgrade pip/setuptools/wheel
        run: python -m pip install -U pip setuptools wheel

      # 선택적 런타임 의존성 설치: requirements.txt가 있으면 설치
      - name: Install runtime requirements (optional)
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      # 개발 도구 설치 (ruff/mypy/pytest)
      - name: Install dev tools
        run: pip install ruff mypy pytest

      # 🔒 오탈자 임포트 가드: 'integration/intergration/intergratoins' 패턴 차단
      - name: Guard • forbid typo imports
        shell: bash
        run: |
          set -euo pipefail
          PATTERN='src\.intergration|src\.intergratoins|src\.integration\.|src\.integration$'
          HITS="$(git grep -nE "$PATTERN" -- ':!*.md' || true)"
          if [ -n "$HITS" ]; then
            echo "::error title=Forbidden import detected::Use 'src.integrations.*' (not integration/intergration/intergratoins)"
            echo "$HITS"
            exit 1
          fi
          echo "OK: no forbidden import typos found."

      # 자동 수정 모드 (--fix)로 가벼운 규칙은 러너에서 정리
      - name: Ruff
        run: ruff check . --fix

      - name: mypy
        run: mypy .

      # src 패키지 인식 위해 PYTHONPATH 설정
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> "$GITHUB_ENV"

      - name: Pytest
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest -q
# ============================= [01] MAIN CI (ruff/mypy/pytest) — END =============================
