name: Nightly Pre-Release

on:
  schedule:
    # 매일 00:30 KST (UTC 15:30)
    - cron: "30 15 * * *"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: nightly-pre-release
  cancel-in-progress: false

jobs:
  gate:
    name: Build & Gate (static + tests)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            pyproject.toml

      - name: Cache ruff
        uses: actions/cache@v4
        with:
          path: ~/.cache/ruff
          key: ruff-${{ runner.os }}-py311-${{ hashFiles('**/*.py', 'pyproject.toml', 'requirements*.txt') }}
          restore-keys: |
            ruff-${{ runner.os }}-py311-

      - name: Cache mypy
        uses: actions/cache@v4
        with:
          path: .mypy_cache
          key: mypy-${{ runner.os }}-py311-${{ hashFiles('**/*.py', 'pyproject.toml', 'requirements*.txt') }}
          restore-keys: |
            mypy-${{ runner.os }}-py311-

      - name: Show tool versions
        run: |
          python -V
          pip -V
          git rev-parse --short HEAD
          git describe --tags --always || true

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install ruff mypy pytest pytest-xdist build twine

      - name: Run static checks
        run: |
          ruff check .
          ruff format --check .
          mypy .

      - name: Pytest (fast, not slow)
        run: pytest -n auto -m "not slow" -q

      - name: Pytest (slow, nightly only)
        run: pytest -n auto -m "slow" -q

      - name: Build dist
        run: |
          set -euo pipefail
          python -m build
          ls -lh dist/

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/*

  publish:
    name: Draft Nightly Pre-Release
    needs: [gate]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            pyproject.toml

      - name: Resolve nightly tag/name
        id: vars
        shell: bash
        run: |
          set -euo pipefail
          TS="$(date -u +'%Y%m%d')"
          HASH="$(git rev-parse --short HEAD)"
          TAG="nightly-${TS}-${HASH}"
          NAME="Nightly ${TS} (${HASH})"
          echo "tag=${TAG}"  >> "$GITHUB_OUTPUT"
          echo "name=${NAME}" >> "$GITHUB_OUTPUT"

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist

      - name: Publish pre-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name:     ${{ steps.vars.outputs.name }}
          prerelease: true
          generate_release_notes: true
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
