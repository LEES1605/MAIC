# ===== [00] META =============================================================  # [00] START
name: Nightly
on:
  schedule:
    - cron: "0 2 * * *"   # 매일 02:00 UTC
  workflow_dispatch:      # 필요 시 수동 실행
permissions:
  contents: write         # (옵션) 프리릴리스 발행 시 필요
concurrency:
  group: nightly-${{ github.ref }}
  cancel-in-progress: true
# [00] END

# ===== [01] JOB: Gate (Lint/Type/Test) ======================================  # [01] START
jobs:
  gate:
    name: Gate (ruff + mypy + pytest) • py${{ matrix.python }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: [ "3.10", "3.11", "3.12" ]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.python }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-${{ matrix.python }}-

      - name: Install deps
        run: |
          python -m pip install -U pip wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -U ruff mypy pytest pytest-cov

      - name: Ruff — Lint/Format
        run: |
          ruff check . --fix
          ruff format .

      - name: mypy — strict
        run: |
          mypy --version
          mypy .

      - name: pytest (if tests exist)
        if: hashFiles('tests/**/*.py') != ''
        run: |
          pytest -q --maxfail=1 --disable-warnings
# [01] END

# ===== [02] JOB: (옵션) Nightly Pre-Release ================================= # [02] START
  nightly_release:
    name: Nightly Pre-Release
    needs: [ gate ]        # gate가 통과해야 실행
    if: ${{ success() && github.ref == 'refs/heads/main' }}  # main에서만
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build dist
        run: |
          mkdir -p dist
          git archive --format zip --output dist/maic-nightly.zip HEAD
          (cd dist && sha256sum maic-nightly.zip > maic-nightly.zip.sha256)

      - name: Create/Update nightly tag
        run: |
          tag="nightly-$(date -u +%Y%m%d)"
          git tag -f "$tag" || true
          git push -f origin "$tag"

      - name: Publish pre-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: nightly-$(date -u +%Y%m%d)
          name: Nightly $(date -u +%Y-%m-%d)
          prerelease: true
          generate_release_notes: true
          files: |
            dist/maic-nightly.zip
            dist/maic-nightly.zip.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# [02] END
