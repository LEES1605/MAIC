# ============================ [01] NIGHTLY PRE-RELEASE WORKFLOW — START ============================
name: Nightly Pre-Release

on:
  # 매일 00:30 KST 실행 (UTC 15:30)
  schedule:
    - cron: "30 15 * * *"
  # 수동 실행 허용
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: nightly-pre-release
  cancel-in-progress: false

jobs:
  checks:
    name: Lint & Typecheck
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Upgrade pip/setuptools/wheel
        run: python -m pip install -U pip setuptools wheel

      # main CI와 동일한 개발 의존성 설치 커맨드로 맞추세요.
      - name: Install dev deps
        run: |
          if [ -f pyproject.toml ]; then
            pip install -e ".[dev]"
          else
            pip install ruff mypy
          fi

      - name: Ruff
        run: ruff check .

      - name: mypy
        run: mypy .

  prerelease:
    name: Publish Nightly Pre-Release
    needs: checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 태그 작업 위해 전체 히스토리 필요

      - id: vars
        name: Compute nightly tag & name (UTC)
        shell: bash
        run: |
          echo "tag=nightly-$(date -u +%Y%m%d)" >> "$GITHUB_OUTPUT"
          echo "name=Nightly $(date -u +%Y-%m-%d)" >> "$GITHUB_OUTPUT"

      - name: Create/Update tag and push
        shell: bash
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch --tags
          git tag -f "${{ steps.vars.outputs.tag }}"
          git push -f origin "${{ steps.vars.outputs.tag }}"

      - name: Build zip artifact
        shell: bash
        run: |
          ZIP="maic-${{ steps.vars.outputs.tag }}.zip"
          git archive --format=zip --output "$ZIP" HEAD
          sha256sum "$ZIP" > "$ZIP.sha256"

      - name: Publish pre-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name:     ${{ steps.vars.outputs.name }}
          prerelease: true
          files: |
            maic-${{ steps.vars.outputs.tag }}.zip
            maic-${{ steps.vars.outputs.tag }}.zip.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# ============================= [01] NIGHTLY PRE-RELEASE WORKFLOW — END =============================
