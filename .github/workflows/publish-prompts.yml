# [01] START: .github/workflows/publish-prompts.yml — 입력/폴백·릴리스 보장·--clobber(전체 교체)
name: publish-prompts

on:
  workflow_dispatch:
    inputs:
      prompts_yaml:
        description: "Prompts YAML contents (multiline)."
        required: false
  repository_dispatch:
    types: [publish-prompts]

permissions:
  contents: write  # release/asset 쓰기 권한

jobs:
  publish:
    if: ${{ github.event_name != 'pull_request' }}  # fork PR 컨텍스트 회피
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install jq and check gh
        shell: bash
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y jq
          gh --version || true

      - name: Prepare prompts.yaml (inputs > client_payload > SSOT fallback)
        id: prep
        shell: bash
        run: |
          set -euo pipefail
          OUT="${RUNNER_TEMP}/prompts.yaml"
          HAVE=""

          # 1) repository_dispatch → client_payload.prompts_yaml
          if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            RAW='${{ toJSON(github.event.client_payload.prompts_yaml) }}'
            if [[ "$RAW" != "null" && -n "$RAW" ]]; then
              printf '%s' "$RAW" | jq -r '.' > "$OUT"; HAVE=1
            fi
          fi

          # 2) workflow_dispatch → inputs.prompts_yaml
          if [[ -z "${HAVE}" ]]; then
            RAW='${{ toJSON(github.event.inputs.prompts_yaml) }}'
            if [[ "$RAW" != "null" && -n "$RAW" ]]; then
              printf '%s' "$RAW" | jq -r '.' > "$OUT"; HAVE=1
            fi
          fi

          # 3) SSOT fallback (docs/_gpt/)
          if [[ -z "${HAVE}" ]]; then
            if [[ -f docs/_gpt/prompts.yaml ]]; then
              cp docs/_gpt/prompts.yaml "$OUT"; HAVE=1
            elif [[ -f docs/_gpt/prompts.sample.yaml ]]; then
              cp docs/_gpt/prompts.sample.yaml "$OUT"; HAVE=1
            fi
          fi

          if [[ -z "${HAVE}" ]]; then
            echo "No prompts provided and no fallback found." >&2
            exit 1
          fi

          echo "out=$OUT" >> "$GITHUB_OUTPUT"

      - name: Ensure release exists (prompts-latest)
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          TAG="prompts-latest"
          if ! gh release view "$TAG" >/dev/null 2>&1; then
            gh release create "$TAG" --title "Prompts Latest" --notes "Automated prompts release"
          fi

      - name: Upload asset (clobber)
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          TAG="prompts-latest"
          FILE="${{ steps.prep.outputs.out }}"
          # 동일 자산명 강제 갱신
          gh release upload "$TAG" "$FILE#prompts.yaml" --clobber

      - name: Summary
        shell: bash
        run: |
          echo "## ✅ prompts published to release 'prompts-latest' as 'prompts.yaml'" >> "$GITHUB_STEP_SUMMARY"
# [01] END: .github/workflows/publish-prompts.yml — 입력/폴백·릴리스 보장·--clobber(전체 교체)
