# [AP-V4] START: FILE .github/workflows/publish-prompts.yml — inputs→prompts.yaml 저장 + 스키마검증 + 릴리스 업로드
name: Publish Prompts

on:
  workflow_dispatch:
    inputs:
      prompts_yaml:
        description: "Prompts YAML (persona + modes.grammar/sentence/passage)"
        required: false
        default: ""
  repository_dispatch:
    types: [publish-prompts]

permissions:
  contents: write   # gh release upload/create 에 필요

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Write prompts.yaml from event input/payload
        shell: bash
        run: |
          set -euo pipefail
          CONTENT=""
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            CONTENT="${{ github.event.inputs.prompts_yaml }}"
          elif [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            CONTENT="${{ github.event.client_payload.prompts_yaml }}"
          fi
          if [[ -z "${CONTENT// }" ]]; then
            echo "[error] No prompts_yaml provided."
            exit 1
          fi
          printf '%s\n' "$CONTENT" > prompts.yaml
          echo "[ok] wrote $(wc -c < prompts.yaml) bytes to prompts.yaml"

      - name: Validate schema (must have version + modes.{grammar,sentence,passage})
        shell: bash
        run: |
          set -euo pipefail
          python - <<'PY'
          import yaml, sys
          y = yaml.safe_load(open("prompts.yaml","r",encoding="utf-8")) or {}
          assert isinstance(y, dict), "[schema] <root>: must be object"
          assert "version" in y, "[schema] <root>: 'version' is a required property"
          modes = y.get("modes")
          assert isinstance(modes, dict), "[schema] modes: must be object"
          for k in ("grammar","sentence","passage"):
              assert k in modes, f"[schema] modes: '{k}' is a required property"
          extras = [k for k in modes.keys() if k not in ("grammar","sentence","passage")]
          assert not extras, f"[schema] modes: Additional properties are not allowed {extras}"
          print("[schema] OK")
          PY

      - name: Upload prompts.yaml to 'prompts-latest' release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          # 이미 있으면 덮어쓰기, 없으면 새로 생성
          gh release upload prompts-latest prompts.yaml --clobber --repo "$GITHUB_REPOSITORY" || \
          gh release create prompts-latest prompts.yaml --title "Prompts Latest" --latest --notes "Published via admin UI" --repo "$GITHUB_REPOSITORY"
# ============== [AP-V4] END: FILE .github/workflows/publish-prompts.yml ==============
